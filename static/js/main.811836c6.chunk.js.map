{"version":3,"sources":["components/Button.js","components/Header.js","components/MoodSelection.js","components/SearchBar.js","components/firebase.js","components/CommentBox.js","components/ResponsivePlayer.js","components/Art.js","components/App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","onClick","handleChange","Header","hide","onChange","MoodSelection","value","mood","handleMood","activeClass","to","spy","smooth","duration","SearchBar","onSubmit","handleSubmit","htmlFor","type","name","id","aria-label","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","CommentBox","state","isMounted","thoughts","userInput","this","setState","database","ref","on","response","newState","data","val","key","push","text","swal","content","button","then","leaveComment","map","thought","React","Component","ResponsivePlayer","videoIds","isLoading","genre","requestUrl","console","log","axios","get","videoList","catch","err","title","icon","request","color","videos","handleMusic","style","backgroundColor","dots","infinite","speed","slidesToShow","slidesToScroll","role","video","url","videoId","onPlay","showSpinner","onBuffer","width","height","Art","getArt","art","searchUrl","res","artIds","Math","floor","random","length","isNull","artInfo","noMood","bgColor","e","moodValue","target","lofi","house","acoustic","love","alternative","jazz","searchValue","preventDefault","input","artPiece","searchTerm","comment","src","primaryImageSmall","alt","artistDisplayName","objectDate","medium","App","useState","checked","setChecked","prev","setTimeout","Fade","in","elevation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.811836c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n export default function Button (props) {\r\n  return (\r\n    <>\r\n      <div className=\"ticket\">\r\n        <div className=\"ticketBreak breakOne\"></div>\r\n        <div className=\"ticketBreak breakTwo\"></div>\r\n        <button className=\"enterButton\" onClick={props.handleChange}>Enter</button>\r\n      </div>\r\n    </>\r\n  )\r\n}","import Button from './Button.js';\r\n\r\nexport default function Header (props) {\r\n  return (\r\n    <header className={props.hide}>\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          <span>Introducing\r\n            <span className=\"dot\">.</span>\r\n            <span className=\"dot\">.</span>\r\n            <span className=\"dot\">.</span>\r\n          </span>\r\n          <span className=\"lineBreak\">\r\n            A Night at the Art Box\r\n          </span>\r\n        </h1>\r\n      </div>\r\n      <Button handleChange={props.onChange}/>\r\n    </header>\r\n  )\r\n}","import React from 'react';\r\nimport { Link } from 'react-scroll';\r\n\r\nexport default function MoodSelection(props) {  \r\n  return (\r\n    <div>\r\n      <div className=\"wrapper moodContents\">\r\n        <h2>Tonight's Mood</h2>\r\n        <form>\r\n          <label>\r\n            Select your mood:\r\n            <select \r\n              className=\"select\" \r\n              value={props.mood} \r\n              onChange={props.handleMood}\r\n              >\r\n              <option>--</option>\r\n              <option value=\"lofi\">Calm</option>\r\n              <option value=\"house\">Cheerful</option>\r\n              <option value=\"acoustic\">Lighthearted</option>\r\n              <option value=\"love\">Lonely</option>\r\n              <option value=\"alternative\">Melancholy</option>\r\n              <option value=\"jazz\">Romantic</option>\r\n            </select>\r\n          </label>\r\n          <Link activeClass=\"active\" to=\"art\" spy={true} smooth={true} duration={1000}>\r\n            <button className=\"go\">Go</button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchBar(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <label htmlFor=\"searchterm\">\r\n        Search Gallery:\r\n      </label>\r\n      <span className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchterm\"\r\n          id=\"searchterm\" \r\n          value={props.value}\r\n          onChange={props.handleChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"fas fa-search\"\r\n          aria-label=\"search\"\r\n          value=\"&#xf002;\"\r\n        />\r\n      </span>\r\n    </form>\r\n  );\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDcyDDaL5p0c_3on7BRZIH8BcgINkRXC-4\",\r\n  authDomain: \"commentbox-a68c6.firebaseapp.com\",\r\n  databaseURL: \"https://commentbox-a68c6.firebaseio.com\",\r\n  projectId: \"commentbox-a68c6\",\r\n  storageBucket: \"commentbox-a68c6.appspot.com\",\r\n  messagingSenderId: \"754571659579\",\r\n  appId: \"1:754571659579:web:096bb7e16b3a2279f50f1e\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport firebase from './firebase';\r\nimport swal from 'sweetalert';\r\nclass CommentBox extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isMounted: false,\r\n      thoughts: [],\r\n      userInput: ''\r\n    }\r\n  }\r\n\r\n  // firebase ref\r\n  componentDidMount() {\r\n    this.setState({\r\n      isMounted: true\r\n    })\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on('value', (response) => {\r\n      const newState = [];\r\n      const data = response.val();\r\n      for (let key in data) {\r\n        newState.push({ key: key, text: data[key] });\r\n      }\r\n      this.setState({\r\n        thoughts: newState\r\n      })\r\n    })\r\n  }\r\n\r\n  // on click of 'add comment' button, display modal where user can then input comment(value)\r\n  leaveComment() {\r\n    swal(\"How did you enjoy your experience at Art Box:\", {\r\n      content: \"input\",\r\n      button: 'SUBMIT'\r\n    })\r\n      .then((value) => {\r\n        if (value === '') {\r\n          swal(`Please enter a comment 😸!`)\r\n        }\r\n        else {\r\n          this.setState({\r\n            userInput: value\r\n          })\r\n          const dbRef = firebase.database().ref();\r\n          dbRef.push(this.state.userInput);\r\n          swal('Thanks for the comment!');\r\n        }\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      isMounted: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"commentBox\">\r\n        <p>Comment Box</p>\r\n        <div className=\"savedThoughts\">\r\n          <button className=\"addComment\" onClick={() => this.leaveComment()}>\r\n            Leave A Comment!\r\n          </button>\r\n          <ul>\r\n            {this.state.thoughts.map((thought) => {\r\n              return (\r\n                <li key={thought.key}>\r\n                  <span className=\"fas fa-comment\" aria-label=\"List style comment icon\"></span>{thought.text}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CommentBox; ","import React from 'react';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player/lazy';\r\nimport Slider from 'react-slick';\r\nimport swal from 'sweetalert';\r\n\r\nclass ResponsivePlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      videoIds: [],\r\n      isLoading: false,\r\n    }\r\n  }\r\n\r\n  // as soon as 'mood' is selected in previous section (mood selection), click play button and a video list will be displayed in a responsive carousel\r\n  handleMusic() {\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n    const genre = this.props.genre + 'music'\r\n    const apiKey = \"AIzaSyCfWCfywMHZBriuwHhiOX-YxOWSgHWgZL8\";\r\n    const requestUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&q=${genre}type=video&key=${apiKey}`\r\n    console.log(requestUrl);\r\n    axios.get(requestUrl).then((response) => {\r\n      const videoList = response.data['items']\r\n      this.setState({\r\n        videoIds: videoList,\r\n        isLoading: false\r\n      })\r\n    })\r\n    // error handling for youtube music video axios call\r\n    .catch(err => {\r\n      if (err.response) {\r\n        // client received an error response (5xx, 4xx)\r\n        swal({\r\n          title: \"404 Error\",\r\n          text: \"Music could not be located at this time.\",\r\n          icon: \"error\",\r\n          button: \"OK\",\r\n        });\r\n      } else if (err.request) {\r\n        // client never received a response, or request never left\r\n        swal({\r\n          title: \"Network Error\",\r\n          text: \"Please try again\",\r\n          icon: \"error\",\r\n          button: \"OK\",\r\n        });\r\n      } else {\r\n        // anything else\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Please try again\",\r\n          icon: \"error\",\r\n          button: \"OK\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const genre = this.props.genre\r\n    const color = this.props.color\r\n    const videos = this.state.videoIds\r\n    // react-slick carousel settings\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n    return (\r\n      <>\r\n        <div className=\"musicPlayer\">\r\n          <div className=\"musicBgImg\"></div>\r\n          <span>\r\n            <p>Set the mood:</p>\r\n            <button value={genre} onClick={() =>this.handleMusic()} style={{ backgroundColor: color }}>\r\n              <span className=\"fas fa-play\" aria-label=\"press play to list videos\"></span>\r\n            </button>\r\n          </span>\r\n          <div className=\"videoList\">\r\n            <div className=\"player-wrapper\">\r\n              <Slider {...settings}>\r\n                {this.state.isLoading ?\r\n                  (\r\n                    <div className=\"musicSpinnerBox\">\r\n                      <span\r\n                        className=\"fa fa-spinner fa-spin fa-3x fa-fw musicSpinner\"\r\n                        aria-label=\"loading...\"\r\n                        role=\"img\"\r\n                      ></span>\r\n                    </div>\r\n                  )\r\n                  :\r\n                  (\r\n                    videos.map(video => (\r\n                      <ReactPlayer\r\n                        key={video.id.videoId}\r\n                        className=\"react-player\"\r\n                        url={`https://www.youtube.com/watch?v=` + video.id.videoId}\r\n                        onPlay={() => this.setState({ showSpinner: false })}\r\n                        onBuffer={() => this.setState({ showSpinner: true })}\r\n                        width=\"100%\"\r\n                        height=\"230px\"\r\n                      />\r\n                    ))\r\n                  )\r\n                }\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        </div>  \r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ResponsivePlayer; ","import React from 'react';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { Link } from 'react-scroll';\r\nimport MoodSelection from './MoodSelection.js';\r\nimport SearchBar from './SearchBar.js'\r\nimport CommentBox from './CommentBox.js';\r\nimport ResponsivePlayer from './ResponsivePlayer.js';\r\n\r\nclass Art extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mood: '',\r\n      noMood: true,\r\n      bgColor: '',\r\n      value: '',\r\n      art: [],\r\n      isNull: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  // axios call for art gallery search\r\n  getArt = userInput => {\r\n    this.setState({\r\n      isLoading: true,\r\n      art: []\r\n    })\r\n    const searchUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=\" + userInput;\r\n    axios\r\n      .get(searchUrl)\r\n      .then(res => {\r\n        const artIds = res.data['objectIDs']\r\n        if (artIds === null) {\r\n          this.setState({\r\n            isNull: true,\r\n            isLoading: false\r\n          })\r\n        }\r\n        else {\r\n          // display one random piece of art from list of art that correlates with user input value\r\n          const randomArtId = artIds[Math.floor(Math.random() * artIds.length)];\r\n          const requestUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/objects/\" + randomArtId;\r\n          return axios.get(requestUrl)\r\n        }\r\n      })\r\n      .then(res => {\r\n        const artInfo = res.data;\r\n        this.setState({\r\n          art: artInfo,\r\n          isNull: false,\r\n          isLoading: false\r\n        })\r\n      })\r\n      // error handling for art gallery search axios call\r\n      .catch(err => {\r\n        if (err.response) {\r\n          // client received an error response (5xx, 4xx)\r\n          swal({\r\n            title: \"404 Error\",\r\n            text: \"Art could not be located at this time.\",\r\n            icon: \"error\",\r\n            button: \"OK\",\r\n          });\r\n        } else if (err.request) {\r\n          // client never received a response, or request never left\r\n          swal({\r\n            title: \"Network Error\",\r\n            text: \"Please try again\",\r\n            icon: \"error\",\r\n            button: \"OK\",\r\n          });\r\n        } else {\r\n          // anything else\r\n          swal({\r\n            title: \"Error\",\r\n            text: \"Please try again\",\r\n            icon: \"error\",\r\n            button: \"OK\",\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  // handles mood selection in correlation to theme of 'art box' (music genre, background color)\r\n  handleMood(e) {\r\n    const moodValue = e.target.value\r\n    this.setState({\r\n      mood: moodValue,\r\n      noMood: false\r\n    });\r\n\r\n    const colorRef = {\r\n      lofi: 'cadetblue',\r\n      house: 'darkgoldenrod',\r\n      acoustic: 'salmon',\r\n      love: 'darkslateblue',\r\n      alternative: 'darkslategray',\r\n      jazz: 'firebrick',\r\n    }\r\n\r\n    this.setState({\r\n      bgColor: colorRef[moodValue]\r\n    })\r\n  }\r\n\r\n  // art gallery search input value - value change\r\n  handleChange(e) {\r\n    const searchValue = e.target.value;\r\n    this.setState({\r\n      value: searchValue\r\n    });\r\n  }\r\n\r\n  // art gallery search input value - value submit\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const input = this.state.value\r\n    this.getArt(input);\r\n  }\r\n\r\n  render() {\r\n    const artPiece = this.state.art;\r\n    const color = this.state.bgColor;\r\n    const searchTerm = this.state.mood;\r\n    const comment = this.state.comment;\r\n    return (\r\n      <>\r\n      <main>\r\n        <section className=\"moodSelection\" id=\"mood\">\r\n          <MoodSelection \r\n            mood={this.state.mood} \r\n            handleMood={(e) => this.handleMood(e)}\r\n            />\r\n        </section>\r\n        <section className=\"art\" id=\"art\" style = {{backgroundColor: color}}>\r\n          <div className=\"wrapper\">\r\n            <div className=\"headingContainer\">\r\n                <Link activeClass=\"active\" to=\"mood\" spy={true} smooth={true} duration={1000}>\r\n                  <button className=\"changeMood\">\r\n                    Change Mood <span className=\"fas fa-level-up-alt\" aria-label=\"Scroll up to change mood\"></span>\r\n                  </button>\r\n                </Link>\r\n              <h2>Art Box</h2>\r\n              <p>{comment}</p>\r\n            </div>\r\n            {this.state.noMood ?\r\n              ( \r\n                // if no mood is chosen, responsive player will not display\r\n                <p className=\"noMoodMsg\">Select a mood above to curate a theme!</p>\r\n              )\r\n              :\r\n              (\r\n                <ResponsivePlayer\r\n                  genre={searchTerm}\r\n                  color={color}\r\n                />\r\n              )\r\n            }\r\n            <div className=\"container\">\r\n              <div className=\"artBox\">\r\n                <SearchBar \r\n                  value={this.state.value}\r\n                  handleSubmit={(e) => this.handleSubmit(e)}\r\n                  handleChange={(e) => this.handleChange(e)}\r\n                />\r\n                {this.state.isLoading ?\r\n                  (\r\n                    <div className=\"artSpinnerBox\">\r\n                      <span\r\n                        className=\"fa fa-spinner fa-spin fa-3x fa-fw artSpinner\"\r\n                        aria-label=\"loading...\"\r\n                        role=\"img\"\r\n                      ></span>\r\n                    </div>\r\n                  )\r\n                  :\r\n                  null\r\n                }\r\n                {this.state.isNull ?\r\n                  (\r\n                    <div className=\"artContainer\">\r\n                      <div className=\"artBgImg\"></div>\r\n                      <p className=\"errMsg\">No art was found. Please try again.</p>\r\n                      <span\r\n                        className=\"errImg\"\r\n                        role=\"img\"\r\n                        aria-label=\"photo in frame for stylistic reasons\"\r\n                      >\r\n                        🖼️\r\n                  </span>\r\n                    </div>\r\n                  )\r\n                  :\r\n                  (\r\n                    <div className=\"artContainer\">\r\n                      <div className=\"artBgImg\"></div>\r\n                      <div className=\"pieceBox\">\r\n                        <div className=\"mat\">\r\n                            <img src={artPiece.primaryImageSmall} alt={artPiece.title} />\r\n                        </div>\r\n                        {/* <img src={artPiece.primaryImageSmall} alt={artPiece.title}/> */}\r\n                      </div>\r\n                      <div className=\"artTextBox\">\r\n                        <h3>{artPiece.title}</h3>\r\n                        <p className=\"artistName\">{artPiece.artistDisplayName}</p>\r\n                        <time className=\"pieceDate\">{artPiece.objectDate}</time>\r\n                        <p className=\"pieceMedium\">{artPiece.medium}</p>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }\r\n              </div>\r\n              <CommentBox />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Art; ","import '../styles/App.css';\nimport Header from './Header.js';\nimport Art from './Art.js';\nimport React, { useState } from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport swal from 'sweetalert';\n\nexport default function App () {\n  const [checked, setChecked] = useState(false);\n\n  // if checked, and component fades in, display modal\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n    setTimeout(() => {\n      swal({\n        title: \"Select a Mood to Set the Mood.\",\n        text: \"Let us know how you're feeling tonight, and we'll match it perfectly!\",\n        button: \"GOTCHA 👌\",\n      });\n    }, 1500);\n  }\n\n  return (\n    <div className='App'>\n      <Header onChange={handleChange} hide={checked ? 'displayNone' : ''}/>\n      <Fade in={checked}>\n        <div elevation={4}>\n          <div className={checked ? 'displayBlock' : 'displayNone'}>\n            <Art />\n          </div>\n        </div>\n      </Fade>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}